basePath: /
definitions:
  main.CertificateIssueRequest:
    properties:
      ca_id:
        example: 1
        type: integer
      csr:
        example: |-
          -----BEGIN CERTIFICATE REQUEST-----
          MIICgjCCAWoCAQAwPTELMAkGA1UEBhMCVk4xFDASBgNVBAoMC0V4YW1wbGUgT3JnMRgwFgYDVQQDDA93d3cuZXhhbXBsZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7ol+rgjOKsTGMvsQRssTJxEWbgK4TarhCt6OCg/WTYiY8+XOOOSvLzBaBCrKWudZSkiivlmoj+iwnhcX/ufJdErWGR1ANcF2x5o5kZ58I9IVdduJaHsN+dkJdNukpFzgvI4Hk6Tha88Hs5DyIcPVfU19zDX2oDpg3hvWb1F0EQOCE0+iV4eu4yUpNuEfemoRHFrE6Lo/4AAqTlhutyM0dvSOVaqcsgWY/9ioqdP1OWsxHHADKek5j70xd+uujAMgiozrapucPNK5YqC09BoQdAb84gGrvwM6jg9ytyYHK02/I0cpN08Q1+oSJVIKzOTSbJPvgSXdnElQ9aqsIX5GlAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEAIxXs09E/K2nhJMXoYoRmU4Fi67FWUYEAgI+KVQAJ/rrziUj4kqZ8T1Krq2FulapCPwBwMtpUCm4xAslGemvSfNOsbnDUmCp2RRZkeDbkYAgi2J3WLpPegWw4gnus/SWLrdaNudjoRJJIo1hcRot2Ia7VmACrMz9S9G/OjOUvF/6hKUsIiNIuM9muxUBkb2UX8YGxJQK8iEp1v0MRE/38TS5FFmgIOyWw4If/fqQak/fmiGM3rolvqU8btb0hfkM0bGPmNSUO5C1rphqIeA/5rUrdI6tryo+aqPg4lDORI2xV9C/egptl4hRPdMSGHVJrTSlfy4jkJ1LYkQyC+zYz8g==
          -----END CERTIFICATE REQUEST-----
        type: string
    required:
    - ca_id
    - csr
    type: object
  main.CertificateRevokeRequest:
    properties:
      reason:
        example: compromised
        type: string
      serial_number:
        example: "123456789"
        type: string
    required:
    - reason
    - serial_number
    type: object
  main.CertificateRevokeResponse:
    properties:
      message:
        example: Certificate revoked
        type: string
    type: object
  main.CreateCARequest:
    properties:
      name:
        example: MyRootCA
        type: string
      parent_ca_id:
        example: 1
        type: integer
      type:
        example: root
        type: string
    required:
    - name
    - type
    type: object
  main.CreateCAResponse:
    properties:
      cert_pem:
        example: |-
          -----BEGIN CERTIFICATE-----
          ...
        type: string
      id:
        example: 1
        type: integer
      message:
        example: CA created successfully
        type: string
      name:
        example: MyRootCA
        type: string
      type:
        example: root
        type: string
    type: object
  main.ErrorResponse:
    properties:
      error:
        example: Invalid request
        type: string
    type: object
  main.KeyGenerateRequest:
    properties:
      id:
        example: my-key-id
        type: string
    required:
    - id
    type: object
  main.KeyGenerateResponse:
    properties:
      id:
        example: my-key-id
        type: string
    type: object
  main.KeyGetResponse:
    properties:
      id:
        example: my-key-id
        type: string
      publicKey:
        example: |-
          -----BEGIN RSA PUBLIC KEY-----
          ...
        type: string
    type: object
  model.Certificate:
    properties:
      ca_id:
        description: Gắn với CA nào
        type: integer
      cert_pem:
        description: PEM-encoded cert
        type: string
      not_after:
        type: string
      not_before:
        type: string
      serial_number:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/model.CertificateStatus'
        description: active, expired, revoked
      subject:
        description: |-
          CAKeyID      int    `json:"ca_key_id"` // Gắn với key nào
          Usage        []KeyUsage        `json:"usage"`     // certSign, crlSign, ocspSign...
        type: string
    type: object
  model.CertificateStatus:
    enum:
    - valid
    - revoked
    - expired
    - unknown
    type: string
    x-enum-varnames:
    - StatusValid
    - StatusRevoked
    - StatusExpired
    - StatusUnknown
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Certificate Authority API for key management and certificate operations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Core CA API
  version: "1.0"
paths:
  /ca/create:
    post:
      consumes:
      - application/json
      description: Create a new Certificate Authority (CA) - either root CA or subordinate
        CA
      parameters:
      - description: CA creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.CreateCARequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.CreateCAResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new Certificate Authority
      tags:
      - Certificate Authority
  /ca/crl:
    get:
      consumes:
      - application/json
      description: Retrieve the current Certificate Revocation List
      parameters:
      - description: Certificate Authority ID
        in: query
        name: ca_id
        required: true
        type: integer
      produces:
      - application/x-pem-file
      responses:
        "200":
          description: PEM encoded CRL
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get Certificate Revocation List (CRL)
      tags:
      - Certificate Authority
  /ca/issue:
    post:
      consumes:
      - application/json
      description: Issue a new certificate from a Certificate Signing Request (CSR)
      parameters:
      - description: Certificate issuance request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.CertificateIssueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Certificate details with PEM data
          schema:
            $ref: '#/definitions/model.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Issue a new certificate
      tags:
      - Certificate Authority
  /ca/revoke:
    post:
      consumes:
      - application/json
      description: Revoke a certificate by its serial number with a specified reason
      parameters:
      - description: Certificate revocation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.CertificateRevokeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.CertificateRevokeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Revoke a certificate
      tags:
      - Certificate Authority
  /crl.pem:
    get:
      consumes:
      - application/json
      description: Retrieve the current Certificate Revocation List in standard CRL
        format
      parameters:
      - description: Certificate Authority ID
        in: query
        name: ca_id
        required: true
        type: integer
      produces:
      - application/pkix-crl
      responses:
        "200":
          description: CRL in PEM format
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get Certificate Revocation List (CRL) as file
      tags:
      - Certificate Authority
  /keymanagement/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a key pair by its ID and return the public key
      parameters:
      - description: Key ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.KeyGetResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get a key pair by ID
      tags:
      - Key Management
  /keymanagement/generate:
    post:
      consumes:
      - application/json
      description: Generate a new RSA key pair with the specified ID
      parameters:
      - description: Key generation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.KeyGenerateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.KeyGenerateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Generate a new key pair
      tags:
      - Key Management
  /ocsp:
    post:
      consumes:
      - application/ocsp-request
      description: Handle Online Certificate Status Protocol requests to check certificate
        status
      parameters:
      - description: Certificate Authority ID
        in: query
        name: ca_id
        required: true
        type: integer
      - description: OCSP request in DER format
        in: body
        name: request
        required: true
        schema:
          type: string
      produces:
      - application/ocsp-response
      responses:
        "200":
          description: OCSP response in DER format
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Handle OCSP request
      tags:
      - Certificate Authority
swagger: "2.0"
