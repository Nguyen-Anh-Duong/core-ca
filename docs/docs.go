// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ca/create": {
            "post": {
                "description": "Create a new Certificate Authority (CA) - either root CA or subordinate CA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate Authority"
                ],
                "summary": "Create a new Certificate Authority",
                "parameters": [
                    {
                        "description": "CA creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateCARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.CreateCAResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ca/crl": {
            "get": {
                "description": "Retrieve the current Certificate Revocation List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pem-file"
                ],
                "tags": [
                    "Certificate Authority"
                ],
                "summary": "Get Certificate Revocation List (CRL)",
                "responses": {
                    "200": {
                        "description": "PEM encoded CRL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ca/issue": {
            "post": {
                "description": "Issue a new certificate from a Certificate Signing Request (CSR)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pem-file"
                ],
                "tags": [
                    "Certificate Authority"
                ],
                "summary": "Issue a new certificate",
                "parameters": [
                    {
                        "description": "Certificate issuance request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CertificateIssueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PEM encoded certificate",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ca/revoke": {
            "post": {
                "description": "Revoke a certificate by its serial number with a specified reason",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate Authority"
                ],
                "summary": "Revoke a certificate",
                "parameters": [
                    {
                        "description": "Certificate revocation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CertificateRevokeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.CertificateRevokeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/keymanagement/generate": {
            "post": {
                "description": "Generate a new RSA key pair with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key Management"
                ],
                "summary": "Generate a new key pair",
                "parameters": [
                    {
                        "description": "Key generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.KeyGenerateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.KeyGenerateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/keymanagement/{id}": {
            "get": {
                "description": "Retrieve a key pair by its ID and return the public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Key Management"
                ],
                "summary": "Get a key pair by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.KeyGetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.CertificateIssueRequest": {
            "type": "object",
            "required": [
                "csr"
            ],
            "properties": {
                "csr": {
                    "type": "string",
                    "example": "-----BEGIN CERTIFICATE REQUEST-----..."
                }
            }
        },
        "main.CertificateRevokeRequest": {
            "type": "object",
            "required": [
                "reason",
                "serial_number"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "compromised"
                },
                "serial_number": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "main.CertificateRevokeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Certificate revoked"
                }
            }
        },
        "main.CreateCARequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "MyRootCA"
                },
                "parent_ca_id": {
                    "type": "integer",
                    "example": 1
                },
                "type": {
                    "type": "string",
                    "example": "root"
                }
            }
        },
        "main.CreateCAResponse": {
            "type": "object",
            "properties": {
                "cert_pem": {
                    "type": "string",
                    "example": "-----BEGIN CERTIFICATE-----\n..."
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "CA created successfully"
                },
                "name": {
                    "type": "string",
                    "example": "MyRootCA"
                },
                "type": {
                    "type": "string",
                    "example": "root"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "main.KeyGenerateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "my-key-id"
                }
            }
        },
        "main.KeyGenerateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "my-key-id"
                }
            }
        },
        "main.KeyGetResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "my-key-id"
                },
                "publicKey": {
                    "type": "string",
                    "example": "-----BEGIN RSA PUBLIC KEY-----\n..."
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Core CA API",
	Description:      "Certificate Authority API for key management and certificate operations",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
